{"version":3,"sources":["context/AuthContext.js","types/authTypes.js","pages/HomeScreen.jsx","components/Navbar.jsx","pages/EditScreen.jsx","components/Formulario.jsx","Reducer/ParticipantesReducer.js","pages/RegistroScreen.jsx","components/Card.jsx","pages/ParticipantesScreen.jsx","routers/AppRouter.jsx","routers/LoginRouter.jsx","reducers/AuthReducer.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","authTypes","HomeScreen","dispatch","useContext","history","useHistory","className","src","alt","width","onClick","type","push","Navbar","activeClassName","to","height","id","EditScreen","pos","useLocation","pathname","split","participantes","JSON","parse","localStorage","getItem","participante","Object","forEach","p","i","useState","nombre","apellidos","email","twitter","ocupacion","data","setData","errorNombre","setErrorNombre","errorApellido","setErrorApellido","errorEmail","setErrorEmail","errorTwitter","setErrorTwitter","errorOcupacion","handleChange","e","target","name","value","console","log","htmlFor","onChange","autoComplete","valido","trim","validacionDatos","setItem","stringify","Formulario","actionAdd","payload","style","border","role","required","placeholder","xmlns","fill","viewBox","d","window","location","href","ParticipantesReducer","state","action","filter","actual","init","RegistroScreen","useReducer","useEffect","Card","index","num","Math","floor","random","path","delete1","splice","reload","deleteP","ParticipantesScreen","mensaje","array_participantes","length","person","map","AppRouter","exact","component","LoginRouter","AuthReducer","App","Provider","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.68115e07.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const AuthContext = createContext();","export const authTypes = {\r\n    login: \"login\",\r\n    logout: \"logout\",\r\n   };","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { authTypes } from \"../types/authTypes\"; \r\n\r\n/**\r\n  Estamos llegando aquí a partir del LoginRouter que es mi router principal por lo que el history lo podemos recibir \r\ncomo un prop, por ello hay que desestructurarlo\r\n* @param {*} history \r\n* @returns \r\n */\r\nconst HomeScreen = () => {\r\n\r\n    //Recuperamos el context y el dispatch para poderlo modificar.\r\n    const { dispatch } = useContext(AuthContext);\r\n    //Recuperamos el history mediante useHistory\r\n    const history = useHistory();\r\n    const handelLogin = () => {\r\n        //Usamos el dispatch para modificar el context y establecerlo en true.\r\n        dispatch({ type: authTypes.login });\r\n\r\n        history.push(\"/participantes\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5 text-center\">\r\n            <img src=\"assets/Tics.png\" alt=\"Tics\" className=\"img-fluid\" width=\"480px\" />\r\n            <h1>Congreso de Tecnologías de la Información</h1>\r\n            <div className=\"d-grid gap-2 col-6 mx-auto\">\r\n                <button className=\"btn btn-outline-primary\" onClick={handelLogin} type=\"button\">Entrar</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default HomeScreen;","import React , { useContext } from 'react';\r\nimport { NavLink , useHistory} from 'react-router-dom';\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { authTypes } from \"../types/authTypes\"; \r\n\r\n\r\n/**\r\n  Estamos llegando aquí a partir del LoginRouter que es mi router principal por lo que el history lo podemos recibir \r\ncomo un prop, por ello hay que desestructurarlo\r\n* @param {*} history \r\n* @returns \r\n */\r\nconst Navbar = () => {\r\n\r\n\r\n  const { dispatch } = useContext(AuthContext);\r\n  //Recuperamos el history mediante useHistory\r\n  const history = useHistory();\r\n  const handelLogout = () => {\r\n    //Usamos el dispatch para modificar el context y establecerlo en true.\r\n    dispatch({ type: authTypes.logout });\r\n  \r\n    history.push(\"/home\");\r\n  };\r\n  \r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg  fixed-top bg-primary navbar-dark\">\r\n        <NavLink activeClassName=\"active text-white\" className=\"navbar-brand\" to=\"/home\">\r\n        <img src=\"assets/utl.png\" alt=\"Congreso de Tecnologias de la Información\" className=\"img-fluid\" width={30} height={30} className=\"d-inline-block align-top\" loading=\"lazy\" />\r\n        \r\n        </NavLink>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link h5\" to=\"/home\">Inicio <span className=\"sr-only\">(current)</span></NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink  className=\"nav-link h5\" to=\"/participantes\">Participantes</NavLink >\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink  className=\"nav-link h5\" to=\"/registro\">Registro</NavLink >\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n          <button type=\"button\"  onClick={handelLogout}  className=\"btn btn-danger mr-3\">Logout</button>\r\n          <img src=\"assets/Tics.png\" alt=\"Congreso de Tecnologias de la Información\" className=\"img-fluid\" width={30} height={30} className=\"d-inline-block align-top\" loading=\"lazy\" />\r\n        \r\n          </form>\r\n        </div>\r\n      </nav>\r\n    );\r\n};\r\nexport default Navbar;","\r\nimport React, { useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nconst EditScreen = () => {\r\n    /* console.log(index); */\r\n    function HeaderView() {\r\n        let location = useLocation();\r\n        return location.pathname\r\n    }\r\n\r\n    const ubicacion = HeaderView();\r\n    const ubi = ubicacion.split(':');\r\n    const pos = ubi[1];\r\n\r\n\r\n\r\n    const participantes = JSON.parse(localStorage.getItem(\"participantes\"));\r\n    var participante = new Object();\r\n    function buscarParticipante() {\r\n        participantes.forEach((p, i) => {\r\n            if (i == pos) {\r\n                participante = p;\r\n            }\r\n        });\r\n    }\r\n    buscarParticipante();\r\n    const [data, setData] = useState(\r\n        {\r\n            nombre: participante.nombre,\r\n            apellidos: participante.apellidos,\r\n            email: participante.email,\r\n            twitter: participante.twitter,\r\n            ocupacion:participante.ocupacion,\r\n        }\r\n    );\r\n    const { nombre, apellidos, email, twitter,ocupacion } = data;\r\n\r\n    const [errorNombre, setErrorNombre] = useState(\"\");\r\n    const [errorApellido, setErrorApellido] = useState(\"\");\r\n    const [errorEmail, setErrorEmail] = useState(\"\");\r\n    const [errorTwitter, setErrorTwitter] = useState(\"\");\r\n    const [errorOcupacion,setErroOcuapcion]=useState(\"\");\r\n\r\n    const handleChange = (e) => {\r\n        //modifcamos el estado\r\n        setData(\r\n            {\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            },\r\n            console.log(data)\r\n        );\r\n    };\r\n\r\n    const validacionDatos = () => {\r\n        setErrorNombre(\"\");\r\n        setErrorTwitter(\"\");\r\n        setErrorApellido(\"\");\r\n        setErrorEmail(\"\");\r\n\r\n        let valido = true;\r\n\r\n        if (!nombre.trim()) {\r\n            setErrorNombre(\"Debes registrar un nombre\");\r\n            valido = false;\r\n        }\r\n        if (!apellidos.trim()) {\r\n            setErrorApellido(\"Debes registrar un apellido\");\r\n            valido = false;\r\n        }\r\n        if (!email.trim()) {\r\n            setErrorEmail(\"Debes registrar un correo\");\r\n            valido = false;\r\n        }\r\n        if (!twitter.trim()) {\r\n            setErrorTwitter(\"Debes registrar un twitter\");\r\n            valido = false;\r\n        }\r\n\r\n        return valido;\r\n    };\r\n    const history = useHistory();\r\n\r\n    //definir el metodo para modificar\r\n    const handleUp = () => {\r\n        if (!validacionDatos()) {\r\n            return;\r\n        }\r\n        participante.nombre = nombre;\r\n        participante.apellidos = apellidos;\r\n        participante.email = email;\r\n        participante.twitter = twitter;\r\n        participante.ocupacion=ocupacion;\r\n\r\n        participantes.forEach((p, i) => {\r\n            if (i == pos) {\r\n                console.log(typeof p);\r\n                p['nombre'] = participante.nombre;\r\n                console.log(p);\r\n                p['apellidos'] = participante.apellidos;\r\n                p['email'] = participante.email;\r\n                p['twitter'] = participante.twitter;\r\n                p['ocupacion']=participante.ocupacion;\r\n            }\r\n        });\r\n        localStorage.setItem(\"participantes\", JSON.stringify(participantes));\r\n\r\n            //Usamos el dispatch para modificar el context y establecerlo en true.\r\n\r\n            history.push(\"/participantes\");\r\n\r\n    };\r\n    return (\r\n        <div>\r\n            <h1>Editar participantes</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-2\"></div>\r\n                <div className=\"col-8\">\r\n\r\n                    <div className=\"card  bg-light shadow-lg p-3 mb-5 bg-white rounded\">\r\n                        <div className=\"card-body\">\r\n                            <form className=\"border border-light p-5\">\r\n                                <label htmlFor=\"txtNombre\" className=\"display-6\">Nombre:</label>\r\n                                <input\r\n                                    onChange={handleChange}\r\n                                    name=\"nombre\" value={nombre}\r\n                                    type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" />\r\n                                {errorNombre && <p className=\"text-danger\">{errorNombre}</p>}\r\n                                <label htmlFor=\"txtApe\" className=\"display-6\">Apellidos:</label>\r\n                                <input\r\n                                    onChange={handleChange}\r\n                                    name=\"apellidos\" value={apellidos}\r\n                                    type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" />\r\n                                {errorApellido && <p className=\"text-danger\">{errorApellido}</p>}\r\n                                <label htmlFor=\"txtEmail\" className=\"display-6\">Email:</label>\r\n                                <input\r\n                                    onChange={handleChange}\r\n                                    name=\"email\" value={email}\r\n                                    type=\"email\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" />\r\n                                {errorEmail && <p className=\"text-danger\">{errorEmail}</p>}\r\n                                <label htmlFor=\"textarea\" className=\"display-6\">Twitter:</label>\r\n                                <input\r\n                                    onChange={handleChange}\r\n                                    name=\"twitter\" value={twitter}\r\n                                    type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" />\r\n                                {errorTwitter && <p className=\"text-danger\">{errorTwitter}</p>}\r\n                                <label htmlFor=\"textarea\" className=\"display-6\">Twitter:</label>\r\n                                <input\r\n                                    onChange={handleChange}\r\n                                    name=\"ocupacion\" value={ocupacion}\r\n                                    type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" />\r\n                                {errorOcupacion && <p className=\"text-danger\">{errorOcupacion}</p>}\r\n                                <button onClick={handleUp} className=\"btn btn-primary btn-block my-4\" type=\"submit\">Guardar</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-2\"></div>\r\n\r\n\r\n                {/*  {\r\n                        mens.map((men) => (\r\n                            <Card key={men.id} {...men} />\r\n                        ))\r\n\r\n                    } */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditScreen\r\n","import React, { useState } from 'react'\r\n/* import { useHistory } from 'react-router'; */\r\n\r\nconst Formulario = ({ dispatch }) => {\r\n\r\n    //Agregamos un state para nuevo y update\r\n    const [data, setData] = useState(\r\n        {\r\n            nombre: \"\",\r\n            apellidos: \"\",\r\n            email: \"\",\r\n            ocupacion: \"\",\r\n            twitter: \"\",\r\n        }\r\n    );\r\n\r\n\r\n\r\n    //Desctructurar el state\r\n    const { nombre, apellidos, email, twitter, ocupacion } = data;\r\n\r\n    //Definir la funcion handleChange\r\n    const handleChange = (e) => {\r\n        //modifcamos el estado\r\n        setData(\r\n            {\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        );\r\n    };\r\n\r\n    const actionAdd = {\r\n        type: \"add\",\r\n        payload: {\r\n            nombre,\r\n            apellidos,\r\n            email,\r\n            twitter,\r\n            ocupacion,\r\n        },\r\n    };\r\n\r\n  \r\n    /*  const history = useHistory(); */\r\n    //definir el metodo para agregar\r\n    const handleAdd = () => {\r\n            //Invocamos el dispatch, todo los dispatch van a tener referencia directa con el reducer a ejecutar , debemos pasarle un action\r\n            dispatch(actionAdd);\r\n\r\n            setData({\r\n                nombre: \"\",\r\n                apellidos: \"\",\r\n                email: \"\",\r\n                twitter: \"\",\r\n            });\r\n            window.location.href=\"/participantes\";  \r\n\r\n        /* history.push(\"/participantes\"); \r\n        Falta esto....*/\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Registro de participante</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-1\"></div>\r\n                <div className=\"col-10\" style={{border:'solid blue'}}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col m-5\">\r\n                            <div className=\"card  bg-light shadow-lg p-3 mb-5 bg-white rounded\">\r\n                                <form className=\"row g-3 needs-validation m-2\" role=\"form\" data-toggle=\"validator\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6 position-relative mt-3\">\r\n                                            <label htmlFor=\"nombre\" className=\"form-label\"> <i className=\"fa fa-user text-info\" /> Nombre :{\" \"} </label>\r\n                                            <span className=\"material-icons-outlined\"></span>\r\n                                            <input onChange={handleChange} name=\"nombre\" value={nombre} type=\"text\" className=\"form-control\" id=\"nombre\" required autoComplete=\"on\" placeholder=\"Nombre..\" />\r\n                                        </div>\r\n                                        <div className=\"col-md-6 position-relative mt-3\">\r\n                                            <label htmlFor=\"apellidos\" className=\"form-label\"> <i className=\"fa fa-user text-info\" /> Apellidos :{\" \"}</label>\r\n                                            <input onChange={handleChange} name=\"apellidos\" value={apellidos} type=\"text\" className=\"form-control\" id=\"apellidos\" required autoComplete=\"on\" placeholder=\"Apellidos..\"/>\r\n                                        </div>\r\n                                        <div className=\"col-md-6 position-relative mt-3\">\r\n                                            <label htmlFor=\"email\" className=\"form-label\"><i className=\"fa fa-envelope text-info\" /> Email: {\" \"}</label>\r\n                                            <input onChange={handleChange} name=\"email\" value={email} type=\"text\" className=\"form-control\" id=\"email\" required  autoComplete=\"on\" placeholder=\"correo@ejemplo.coms\"/>\r\n                                        </div>\r\n                                        <div className=\"col-md-6 position-relative mt-3\">\r\n                                            <label htmlFor=\"ocupacion\" className=\"form-label\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-person-badge mr-2 text-info\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M6.5 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1h-3zM11 8a3 3 0 1 1-6 0 3 3 0 0 1 6 0z\" />\r\n                                                    <path d=\"M4.5 0A2.5 2.5 0 0 0 2 2.5V14a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V2.5A2.5 2.5 0 0 0 11.5 0h-7zM3 2.5A1.5 1.5 0 0 1 4.5 1h7A1.5 1.5 0 0 1 13 2.5v10.795a4.2 4.2 0 0 0-.776-.492C11.392 12.387 10.063 12 8 12s-3.392.387-4.224.803a4.2 4.2 0 0 0-.776.492V2.5z\" />\r\n                                                </svg>\r\n                                                Ocupación: {\" \"}</label>\r\n                                            <input onChange={handleChange} name=\"ocupacion\" value={ocupacion} type=\"text\" className=\"form-control\" id=\"ocupacion\" required autoComplete=\"on\" placeholder=\"Ocupación..\"/>\r\n                                        </div>\r\n                                        <div className=\"col-md-12 position-relative\">\r\n                                            <label htmlFor=\"twitter\" className=\"form-label\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-twitter mr-2 text-info\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\" />\r\n                                                </svg>\r\n                                                Usuario en Twitter :{\" \"}</label>\r\n                                            <div className=\"input-group has-validation\">\r\n                                                <span className=\"input-group-text\" id=\"validationTooltipUsernamePrepend\">@</span>\r\n                                                <input onChange={handleChange} name=\"twitter\" value={twitter} type=\"text\" className=\"form-control\" id=\"twitter\" aria-describedby=\"validationTooltipUsernamePrepend\" required autoComplete=\"on\" placeholder=\"ejemplo..\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-12 position-relative\">\r\n                                        <button   onClick={handleAdd} className=\"btn btn-info btn-block my-4\" type=\"submit\">Guardar</button>\r\n\r\n                                    </div>\r\n\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                   {/*  <div className=\"card  bg-light shadow-lg p-3 mb-5 bg-white rounded\">\r\n                        <div className=\"card-body\">\r\n                            <form className=\"border border-light p-5\">\r\n                                <label className=\"mx-1 d-grid gap-2\">Nombre: {\" \"}</label>\r\n                                <input onChange={handleChange} name=\"nombre\" value={nombre} type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" placeholder=\"Nombre..\" />\r\n                                {errorNombre && <p className=\"text-danger\">{errorNombre}</p>}\r\n                                <label className=\"mx-1 d-grid gap-2\">Apellidos: {\" \"}</label>\r\n                                <input onChange={handleChange} name=\"apellidos\" value={apellidos} type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" placeholder=\"Apellidos..\" />\r\n                                {errorApellido && <p className=\"text-danger\">{errorApellido}</p>}\r\n                                <label className=\"mx-1 d-grid gap-2\">Email: {\" \"}</label>\r\n                                <input onChange={handleChange} name=\"email\" value={email} type=\"email\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" placeholder=\"correo@ejemplo.com\" />\r\n                                {errorEmail && <p className=\"text-danger\">{errorEmail}</p>}\r\n                                <label className=\"mx-1 d-grid gap-2\">Twitter: {\" \"}</label>\r\n                                <div class=\"input-group\">\r\n                                    <span class=\"input-group-text\" id=\"inputGroupPrepend2\">@</span>\r\n                                    <input onChange={handleChange} name=\"twitter\" value={twitter} type=\"text\" className=\"form-control  form-control-lg mb-4\" autoComplete=\"off\" />\r\n                                    {errorTwitter && <p className=\"text-danger\">{errorTwitter}</p>}\r\n                                </div>\r\n                                <button onClick={handleAdd} className=\"btn btn-primary btn-block my-4\" type=\"submit\">Guardar</button>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n                <div className=\"col-1\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n","/** \r\n * El reduder se define como una arrow function que recibe solo dos parametros que son : un state y un action\r\n*/\r\nexport const ParticipantesReducer=(state,action)=>{\r\n\r\n    switch (action.type) {\r\n        case \"add\":\r\n            return [...state,action.payload]//HAcemos una copia sdel state y le agregamos un action.payload que contiene la infrmacion con los nuevos datos\r\n        case \"delete\":\r\n            return state.filter((actual)=>actual.id!==action.payload);//filtar, donde se diferente a ...\r\n            //filtrar el state con todos los datos menos donde el id concida\r\n            default:\r\n            return state;\r\n    }\r\n\r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport Formulario from '../components/Formulario';\r\nimport { ParticipantesReducer } from '../Reducer/ParticipantesReducer';\r\n\r\n//Definimos la funcion init . donde vamos poder hacer todo lo necesario para crear el localstorage\r\nconst init=()=>{\r\n    //Definimos el localStorage\r\n    const participantes=localStorage.getItem(\"participantes\");\r\n    return participantes ? JSON.parse(participantes) : []; //? para un if de vacio\r\n}\r\n\r\nconst RegistroScreen = () => {\r\n    const [state,dispatch]=useReducer(ParticipantesReducer,[],init);\r\n\r\n    useEffect(() => {\r\n        //Actulizamos el localStorage\r\n        localStorage.setItem(\"participantes\",JSON.stringify(state));\r\n    }, [state])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Formulario dispatch={dispatch}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistroScreen\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nconst Card = ({ index, nombre, email, twitter, apellidos, ocupacion,dispatch }) => {\r\n\r\n    function HeaderView() {\r\n        let location = useLocation();\r\n        return location.pathname\r\n    }\r\n    const history = useHistory();\r\n\r\n    const num = Math.floor(Math.random() * (13 - 1) + 1);\r\n    const path = `/assets/${num}.png`;\r\n\r\n    const participantes = JSON.parse(localStorage.getItem(\"participantes\"));\r\n\r\n    \r\n    function deleteP(index){\r\n        console.log(index);\r\n            participantes.splice(index, 1);\r\n           \r\n            //histoy.push(\"/participantes\");\r\n        console.log(participantes);\r\n        localStorage.setItem(\"participantes\", JSON.stringify(participantes));\r\n         window.location.reload();\r\n    }\r\n    const delete1=(index)=>{\r\n        deleteP(index);\r\n    }\r\n    \r\n\r\n\r\n    console.log(index);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-5 m-3\">\r\n                <div className=\"card-box cardB bg-light shadow-lg p-3 mb-5 bg-white rounded\">\r\n                    <div className=\"member-card pt-2 pb-2\">\r\n                        <div className=\"thumb-lg member-thumb mx-auto float float-left\" >\r\n                            <img src={path} alt=\"Congreso\" className=\"rounded-circle img-fluid\" width=\"80px\" />\r\n                        </div>\r\n                        <div className=\"ml-3 text-center\">\r\n                            <h4>{nombre}  {apellidos}</h4>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <a href={\"https://twitter.com/\"+twitter} className=\"guest-twitter text-primary\" data-original-title=\"Twitter\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-twitter mr-2 text-primary\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\" />\r\n                                                </svg>\r\n                                {twitter}\r\n                            </a>\r\n                        </div>\r\n\r\n                        <div className=\"text-center\">\r\n                        <h4>{email}</h4>\r\n                        <h4>{ocupacion}</h4>\r\n                        </div>\r\n                        <div className=\"col-12 position-relative \">\r\n                            <br />\r\n                        <Link to={`edit:${index}`}><button type=\"button\" className=\"btn btn-outline-info  btn-block my-4\" >Editar</button></Link>\r\n                        <button type=\"button\"  onClick={()=>delete1(index)} className=\"btn btn-outline-danger  btn-block my-4\" >Eliminar</button>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* end col */}\r\n        </>\r\n\r\n\r\n\r\n\r\n        /*  <div className=\"card m-3 col-12 col-md-4\" style={{ width: 200 }}>\r\n             <img className=\"card-img-top\" src={path} alt={id} />\r\n \r\n             <div className=\"card-body\">\r\n                 <h3 className=\"card-title\">{name}</h3>\r\n                 <p className=\"card-text\">\r\n                     <Link className=\"card-link\" to={`/character/${id}`}>\r\n                         Ver Más ...\r\n                     </Link>\r\n                 </p>\r\n             </div>\r\n         </div> */\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../components/Card';\r\nimport Alerta from '../components/Alerta';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ParticipantesScreen = () => {\r\n\r\n    const participantes = JSON.parse(localStorage.getItem(\"participantes\"));//traer todos los participantes;  */\r\n    /* var validacion=true; */\r\n    var mensaje = '';\r\n    const array_participantes = [];\r\n    const comprobarVacio=()=> {\r\n        if (participantes.length) {\r\n            return mensaje = '';\r\n        }\r\n\r\n        else {\r\n            return mensaje = 'No existen aun participantes';\r\n        }\r\n    }\r\n    mensaje=comprobarVacio();\r\n    return (\r\n\r\n        <div className=\"contianer-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <h1>Lista de partcipantes</h1>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <Link to=\"/registro\" ><button className=\"btn btn-warning btn-lg  btn-block\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-plus m-2\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\" />\r\n                        </svg>\r\n                        Agregar</button></Link>{/* \r\n            <button type=\"button\" className=\"btn btn-outline-success float float-right\" onClick={handleBack} >Agregar</button> */}\r\n                </div>\r\n\r\n                <hr />\r\n            </div>\r\n            <div className=\"col-12 m-4\" id=\"myDIV\">\r\n                <div className=\"row\">\r\n                    <h3>{mensaje}</h3>\r\n                    {\r\n                       \r\n                        participantes.forEach((p, index) => {\r\n                            const person = {};\r\n                            person.index = index;\r\n                            person.nombre = p.nombre;\r\n                            person.apellidos = p.apellidos;\r\n                            person.email = p.email;\r\n                            person.twitter = p.twitter;\r\n                            person.ocupacion = p.ocupacion;\r\n                            array_participantes.push(person);\r\n                        }),\r\n                        array_participantes.map((person) => (\r\n                            <Card key={person} {...person} />\r\n                        ))\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ParticipantesScreen;","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport EditScreen from '../pages/EditScreen';\r\nimport RegistroScreen from '../pages/RegistroScreen';\r\nimport ParticipantesScreen from '../pages/ParticipantesScreen';\r\nconst AppRouter = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Navbar />\r\n            <br /><br />\r\n\r\n            <Switch>\r\n                <Route exact path=\"/participantes\" component={ParticipantesScreen} />\r\n                <Route exact path=\"/registro\" component={RegistroScreen} />\r\n                <Route exact path=\"/edit:index\" component={EditScreen} />\r\n                {/*Con <Redirect> hacemos que en la ruta / nos redirija la ruta por defecto que queramos */}\r\n                <Redirect to=\"/home\" />\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport HomeScreen from '../pages/HomeScreen';\r\nimport AppRouter from './AppRouter';\r\nconst LoginRouter = () => {\r\n    return (\r\n        <Router>\r\n            <AppRouter />\r\n\r\n            <Switch>\r\n                <Route exact path=\"/home\" component={HomeScreen} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default LoginRouter;","import { authTypes } from \"../types/authTypes\";\r\nexport const AuthReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case authTypes.login:\r\n            return { log: true };\r\n        case authTypes.logout:\r\n            return { log: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { useEffect, useReducer } from 'react';\nimport LoginRouter from './routers/LoginRouter';\nimport { AuthContext } from './context/AuthContext';\nimport { AuthReducer } from './reducers/AuthReducer';\n//Definimos la función init, para intentar recuperar el estado del log desde el localstorage.\nconst init = () => {\n    return JSON.parse(localStorage.getItem('log')) || { log: false }\n};\nconst App = () => {\n    //Definimos el context para toda la aplicación mediante el hook useContext.\n    const [log, dispatch] = useReducer(AuthReducer, {}, init);\n    //Definimos un hook useEffect para persistir el estado del log, cada vez que este cambie.\n    useEffect(() => {\n        localStorage.setItem('log', JSON.stringify(log));\n    }, [log])\n    //Usamos <AuthContext.Provider> para proveer el contexto a toda la aplicación, y mediante el dispatch poderlo  modificar\n    return (\n        <AuthContext.Provider value={{ log, dispatch }}>\n            <LoginRouter />\n        </AuthContext.Provider>\n    )\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}